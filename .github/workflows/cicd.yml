name: CI/CD Pipeline

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

jobs:
  docker-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker images
        run: |
          docker build -t telegram-scraper -f docker/Dockerfile.scraper .
          docker build -t analytics-api -f docker/Dockerfile.api .
          docker build -t pipeline-orchestrator -f docker/Dockerfile.orch .

      - name: Validate Docker Compose
        run: |
          docker-compose -f docker/docker-compose.yml config

  test:
    runs-on: ubuntu-latest
    needs: docker-build
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_pass
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgl1 libglib2.0-0

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest docker
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Configure dbt environment
        run: |
          mkdir -p ~/.dbt
          echo "test_db:" > ~/.dbt/profiles.yml
          echo "  outputs:" >> ~/.dbt/profiles.yml
          echo "    dev:" >> ~/.dbt/profiles.yml
          echo "      type: postgres" >> ~/.dbt/profiles.yml
          echo "      host: localhost" >> ~/.dbt/profiles.yml
          echo "      port: 5432" >> ~/.dbt/profiles.yml
          echo "      user: test_user" >> ~/.dbt/profiles.yml
          echo "      password: test_pass" >> ~/.dbt/profiles.yml
          echo "      dbname: test_db" >> ~/.dbt/profiles.yml
          echo "      schema: public" >> ~/.dbt/profiles.yml
          echo "  target: dev" >> ~/.dbt/profiles.yml

      - name: Run flake8 linting
        run: |
          flake8 src --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 src --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Run unit tests
        run: |
          if [ -d "tests" ]; then
            pytest tests/ --cov=src --cov-report=xml
          else
            echo "No tests directory found. Skipping unit tests."
          fi

      - name: Run dbt tests
        working-directory: ./src/dbt_project
        run: |
          if [ -f "dbt_project.yml" ]; then
            dbt deps
            dbt seed --full-refresh
            dbt run --full-refresh
            dbt test
          else
            echo "No dbt project found. Skipping dbt tests."
          fi

      - name: Run API tests
        run: |
          if [ -f "src/api/main.py" ]; then
            python -m src.api.main &
            sleep 5
            pytest src/api/tests/ || true
          else
            echo "No API found. Skipping API tests."
          fi

      - name: Test Docker container functionality
        run: |
          # Test scraper image
          docker run --rm telegram-scraper python --version
          
          # Test API image health check
          docker run -d --name test-api -p 8000:8000 analytics-api
          sleep 5
          curl --fail http://localhost:8000/health || echo "API health check failed"
          docker stop test-api