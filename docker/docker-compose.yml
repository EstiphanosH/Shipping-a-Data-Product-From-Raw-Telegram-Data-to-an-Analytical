# Docker Compose config

version: "3.8"

services:
  postgres:
    image: postgres:15
    container_name: db
    restart: always
    env_file: ../.env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../src/dbt_project:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  pipeline:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: telegram-pipeline
    depends_on:
      postgres:
        condition: service_healthy
    env_file: ../.env
    environment:
      PYTHONPATH: /app
      DBT_PROFILES_DIR: ${DBT_PROFILES_DIR}
    volumes:
      - ..:/app
      - ../logs:/app/logs
      - ../data:/app/data
    ports:
      - "8000:8000"  # FastAPI
      - "3000:3000"  # Dagster

volumes:
  postgres_data:
